name: Render diagram preview

on:
  pull_request:

jobs:
  render:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.x"
          cache: true
          cache-dependency-path: |
            nagare/go.mod
            nagare/go.sum

      - name: Download dependencies
        working-directory: nagare
        run: go mod download

      - name: Build Nagare server
        working-directory: nagare
        run: go build -o nagare-server ./cmd/nagare

      - name: Start Nagare server
        run: |
          cd nagare
          ./nagare-server > server.log 2>&1 &
          echo $! > server.pid

      - name: Fetch /test SVG output
        run: |
          for attempt in {1..60}; do
            if curl -fsS http://localhost:8080/test -o nagare-test.svg; then
              exit 0
            fi
            sleep 1
          done
          echo "Server failed to respond" >&2
          exit 1

      - name: Stop Nagare server
        if: always()
        run: |
          if [ -f nagare/server.pid ]; then
            kill $(cat nagare/server.pid) 2>/dev/null || true
            sleep 1
            if kill -0 $(cat nagare/server.pid) 2>/dev/null; then
              kill -9 $(cat nagare/server.pid) 2>/dev/null || true
            fi
          fi
          echo '--- Nagare server log ---'
          cat nagare/server.log || true

      - name: Validate SVG file
        run: |
          if [ ! -f nagare-test.svg ]; then
            echo "SVG output missing" >&2
            exit 1
          fi

          if [ ! -s nagare-test.svg ]; then
            echo "SVG file is empty" >&2
            exit 1
          fi

      - name: Create gist with diagram
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Create a gist with the SVG file
          GIST_URL=$(gh gist create nagare-test.svg | head -n1)
          # Get the raw URL
          RAW_URL="${GIST_URL/github.com/githubusercontent.com}/raw"
          # Save for next step
          echo "GIST_URL=$RAW_URL" >> $GITHUB_ENV

      - name: Comment SVG preview on PR
        env:
          GH_TOKEN: ${{ github.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          # Create comment with the SVG link
          echo "### Nagare /test diagram preview" > comment.md
          echo "" >> comment.md
          echo "<details>" >> comment.md
          echo "<summary>View diagram</summary>" >> comment.md
          echo "" >> comment.md
          echo "![Nagare /test preview]($GIST_URL)" >> comment.md
          echo "" >> comment.md
          echo "</details>" >> comment.md

          # Post the comment
          gh pr comment "$PR_NUMBER" --body-file comment.md
          echo "" >> comment.md
          echo "</details>" >> comment.md

          # Post the comment
          gh pr comment "$PR_NUMBER" --body-file comment.md

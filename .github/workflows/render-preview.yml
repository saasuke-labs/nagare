name: Render diagram preview

on:
  pull_request:

jobs:
  render:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: nagare/go.mod
          check-latest: true

      - name: Download dependencies
        working-directory: nagare
        run: go mod download

      - name: Start Nagare server
        run: |
          cd nagare
          go run ./cmd/nagare/main.go > ../server.log 2>&1 &
          echo $! > ../server.pid

      - name: Fetch /test SVG output
        run: |
          for attempt in {1..30}; do
            if curl --fail --silent --show-error http://127.0.0.1:8080/test -o nagare-test.svg; then
              exit 0
            fi
            sleep 1
          done
          echo "Server failed to respond" >&2
          exit 1

      - name: Stop Nagare server
        if: always()
        run: |
          if [ -f server.pid ]; then
            PID=$(cat server.pid)
            if kill "$PID" 2>/dev/null; then
              for attempt in {1..10}; do
                if ! kill -0 "$PID" 2>/dev/null; then
                  break
                fi
                sleep 1
              done
              kill -9 "$PID" 2>/dev/null || true
            fi
            rm -f server.pid
          fi
          echo '--- Nagare server log ---'
          cat server.log || true

      - name: Comment SVG preview on PR
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const marker = '<!-- nagare-test-preview -->';
            const svgPath = 'nagare-test.svg';
            if (!fs.existsSync(svgPath)) {
              core.setFailed('SVG output missing');
              return;
            }
            const svg = fs.readFileSync(svgPath, 'utf8');
            const encoded = Buffer.from(svg).toString('base64');
            const body = [
              marker,
              '### Nagare /test diagram preview',
              '<details>',
              '<summary>Click to expand</summary>',
              '',
              `<img alt="Nagare /test preview" src="data:image/svg+xml;base64,${encoded}" />`,
              '</details>'
            ].join('\n');

            const issue_number = context.payload.pull_request.number;
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              per_page: 100
            });
            const existing = comments.find(comment => comment.body.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number,
                body
              });
            }
